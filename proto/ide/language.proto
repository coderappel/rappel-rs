syntax = "proto3";

package ide.language;

service LanguageService {
  rpc Start(StartRequest) returns (StartResponse);

  rpc List(ListRequest) returns (ListResponse);

  rpc Get(GetRequest) returns (GetResponse);

  rpc Listen(ListenRequest) returns (stream ListenResponse);

  rpc Send(SendRequest) returns (SendResponse);

  rpc Stop(StopRequest) returns (StopResponse);
}

enum Status {
  Status_Unknown = 0;
  Starting = 1;
  Ok = 2;
  Terminating = 3;
}

enum Protocol {
  Protocol_Unknown = 0;
  LSP = 1;
}

message LanguageServer {
  int32 server_id = 1;
  string address = 2;
  Protocol protocol = 3;
  string server_name = 4;
  string server_version = 5;
  string description = 6;
  string language_id = 9;
  string working_directory = 10;
  repeated string params = 11;
  Status status = 15;
  int32 pid = 16;
  string exec_command = 20;
}

message StartRequest {
  string language_id = 1;
  string server_name = 2;
  string version = 3;
  string working_directory = 4;
  repeated string params = 5;
}

message StartResponse {
  LanguageServer server = 1;
}

message GetRequest {
  int32 server_id = 1;
}

message GetResponse {
  LanguageServer server = 1;
}

message ListRequest {
}

message ListResponse {
  repeated LanguageServer servers = 1;
}

message StopRequest {
  int32 server_id = 1;
}

message StopResponse {
  LanguageServer server = 1;
}

message ListenRequest {
  int32 server_id = 1;
}

message ListenResponse {
  bytes payload = 2;
}

message SendRequest {
  int32 server_id = 1;
  bytes payload = 2;
}

message SendResponse {
  bytes payload = 1;
}
